<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>电设第二次作业</title>
      <link href="/2023/03/29/%E7%94%B5%E8%AE%BE%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/03/29/%E7%94%B5%E8%AE%BE%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="电设第二次作业"><a href="#电设第二次作业" class="headerlink" title="电设第二次作业"></a>电设第二次作业</h1><h3 id="作业内容"><a href="#作业内容" class="headerlink" title="作业内容"></a>作业内容</h3><ul><li>使用定时器输出PWM波控制灯的亮度</li><li>设置四个按键</li><li>按键1控制模式（占空比或频率）</li><li>按键2，3控制升高和降低</li><li>按键3实现按下后出现呼吸灯</li><li>定时器实现每隔一秒打印一次频率和占空比</li></ul><h3 id="全集变量"><a href="#全集变量" class="headerlink" title="全集变量"></a>全集变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> mode=<span class="number">0</span>;<span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> hz=<span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> zhankongbi=<span class="number">50</span>;</span><br></pre></td></tr></table></figure><h3 id="使用定时器输出PWM波"><a href="#使用定时器输出PWM波" class="headerlink" title="使用定时器输出PWM波"></a>使用定时器输出PWM波</h3><p>原理图：</p><p><img src="1679992046732.png" alt="1679992046732"></p><p>代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">()</span>&#123;</span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    <span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO;</span><br><span class="line">GPIO.GPIO_Mode=GPIO_Mode_AF_PP;</span><br><span class="line">GPIO.GPIO_Pin=GPIO_Pin_0;</span><br><span class="line">GPIO.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO);</span><br><span class="line">    <span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInit_structuct;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_ClockDivision=TIM_CKD_DIV1 ;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_CounterMode=TIM_CounterMode_Up ;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_Period= <span class="number">100</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_Prescaler= <span class="number">720</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_RepetitionCounter= <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInit_structuct);</span><br><span class="line">    <span class="comment">//配置输入比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInit_Structure;</span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInit_Structure);</span><br><span class="line">TIM_OCInit_Structure.TIM_OCMode=TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInit_Structure.TIM_OCPolarity=TIM_OCPolarity_High;</span><br><span class="line">TIM_OCInit_Structure.TIM_OutputState=TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInit_Structure.TIM_Pulse=<span class="number">0x31</span>;</span><br><span class="line">TIM_OC1Init(TIM2,&amp;TIM_OCInit_Structure);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置完后，调用函数会在A0输出PWM波（频率1000hz，占空比百分之五十）</li></ul><h3 id="按键初始化以及按键设置"><a href="#按键初始化以及按键设置" class="headerlink" title="按键初始化以及按键设置"></a>按键初始化以及按键设置</h3><p>代码部分：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">speedup_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_15;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource15);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line15;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">speeddown_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_12;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource12);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line12;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">change_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_1;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOB,GPIO_PinSource1);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line1;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line">NVIC_InitTypeDef NVIC_Init_Structure;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannel=EXTI1_IRQn;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelCmd=ENABLE;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelPreemptionPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelSubPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Exit_init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_11;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource11);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line11;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_Init_Structure;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannel=EXTI15_10_IRQn;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelCmd=ENABLE;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelPreemptionPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelSubPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI15_10_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line11)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_11)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line">mode=<span class="number">1</span>-mode;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line11);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line15)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_15)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">0</span>&amp;&amp;hz&lt;<span class="number">5000</span>)&#123;</span><br><span class="line">hz+=<span class="number">1000</span>;</span><br><span class="line">TIM_PrescalerConfig(TIM2,<span class="number">7200000</span>/hz<span class="number">-1</span>,TIM_PSCReloadMode_Immediate);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="keyword">if</span>(mode==<span class="number">1</span>&amp;&amp;zhankongbi&lt;<span class="number">100</span>)&#123;</span><br><span class="line">       zhankongbi+=<span class="number">10</span>;</span><br><span class="line">   TIM_SetCompare1(TIM2,zhankongbi);</span><br><span class="line">   &#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line15);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line12)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">0</span>&amp;&amp;hz&gt;<span class="number">1000</span>)&#123;</span><br><span class="line">hz-=<span class="number">1000</span>;</span><br><span class="line">TIM_PrescalerConfig(TIM2,<span class="number">7200000</span>/hz<span class="number">-1</span>,TIM_PSCReloadMode_Immediate);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="keyword">if</span>(mode==<span class="number">1</span>&amp;&amp;zhankongbi&gt;<span class="number">0</span>)&#123;</span><br><span class="line">       zhankongbi-=<span class="number">10</span>;</span><br><span class="line">   TIM_SetCompare1(TIM2,zhankongbi);&#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line12);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI1_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line1)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_1)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line">x=<span class="number">1</span>-x;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="定时器打印"><a href="#定时器打印" class="headerlink" title="定时器打印"></a>定时器打印</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span>  <span class="title function_">Timer_init</span><span class="params">()</span>&#123;</span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInit_structuct;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_ClockDivision=TIM_CKD_DIV1 ;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_CounterMode=TIM_CounterMode_Up ;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_Period= <span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_Prescaler= <span class="number">7200</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInit_structuct.TIM_RepetitionCounter= <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInit_structuct);</span><br><span class="line">TIM_ClearFlag(TIM3,TIM_FLAG_Update);</span><br><span class="line">TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE);</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_Init1;</span><br><span class="line">NVIC_Init1.NVIC_IRQChannel=TIM3_IRQn;</span><br><span class="line">NVIC_Init1.NVIC_IRQChannelCmd=ENABLE;</span><br><span class="line">NVIC_Init1.NVIC_IRQChannelPreemptionPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init1.NVIC_IRQChannelSubPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_Init1);</span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;模式:频率 &quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;模式:占空比 &quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;频率是%d &quot;</span>,hz);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;占空比是%d%%\r\n&quot;</span>,zhankongbi);</span><br><span class="line"> TIM_ClearITPendingBit(TIM3,TIM_IT_Update);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主函数部分"><a href="#主函数部分" class="headerlink" title="主函数部分"></a>主函数部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line">Exit_init();</span><br><span class="line">Timer_init();</span><br><span class="line">speedup_Init();</span><br><span class="line">speeddown_Init();</span><br><span class="line">change_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">Serial_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(zhankongbi=<span class="number">0</span>;zhankongbi&lt;=<span class="number">100</span>;zhankongbi++)</span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2,zhankongbi);</span><br><span class="line">Delay_ms(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(zhankongbi=<span class="number">100</span>;zhankongbi&gt;=<span class="number">0</span>;zhankongbi--)</span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2,zhankongbi);</span><br><span class="line">Delay_ms(<span class="number">3</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">zhankongbi=<span class="number">0</span>;</span><br><span class="line">TIM_SetCompare1(TIM2,zhankongbi);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 电设作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电设第一次作业</title>
      <link href="/2023/03/28/%E7%94%B5%E8%AE%BE%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/03/28/%E7%94%B5%E8%AE%BE%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="电设第一次作业"><a href="#电设第一次作业" class="headerlink" title="电设第一次作业"></a>电设第一次作业</h1><h3 id="作业内容"><a href="#作业内容" class="headerlink" title="作业内容"></a>作业内容</h3><ul><li>实现LED流水灯</li><li>按键实现LED流水灯的开关，加速和监督</li><li>实现串口通信，将printf函数重定向到UART</li></ul><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> speed=<span class="number">500</span>;</span><br></pre></td></tr></table></figure><h3 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h3><p>原理图：</p><p><img src="1679986086908.png" alt="1679986184031"></p><p>代码部分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我这里使用的是stm32f103c6t6,PA9和PA10为rx和tx</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO;</span><br><span class="line">GPIO.GPIO_Mode=GPIO_Mode_AF_PP;</span><br><span class="line">GPIO.GPIO_Pin=GPIO_Pin_9;</span><br><span class="line">GPIO.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO);</span><br><span class="line">USART_InitTypeDef USARTInit_Structure;</span><br><span class="line">    <span class="comment">//设置波特率</span></span><br><span class="line">USARTInit_Structure.USART_BaudRate=<span class="number">9600</span>;</span><br><span class="line">USARTInit_Structure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;</span><br><span class="line">    <span class="comment">//这个模式下只能写到电脑上</span></span><br><span class="line">USARTInit_Structure.USART_Mode=USART_Mode_Tx;</span><br><span class="line">    <span class="comment">//双向通信</span></span><br><span class="line">    <span class="comment">//USARTInit_Structure.USART_Mode=USART_Mode_Tx | USART_Mode_Rx;;</span></span><br><span class="line">    <span class="comment">//验证位设置</span></span><br><span class="line">USARTInit_Structure.USART_Parity=USART_Parity_No;</span><br><span class="line">    <span class="comment">//停止位设置</span></span><br><span class="line">USARTInit_Structure.USART_StopBits=USART_StopBits_1;</span><br><span class="line">    <span class="comment">//有效位设置</span></span><br><span class="line">USARTInit_Structure.USART_WordLength=USART_WordLength_8b;</span><br><span class="line">USART_Init(USART1,&amp;USARTInit_Structure);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//封装一些函数便于之后的使用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendbyte</span><span class="params">(<span class="type">uint8_t</span> t)</span>&#123;</span><br><span class="line">USART_SendData(USART1,t);</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TXE)==RESET);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sendarray</span><span class="params">(<span class="type">uint8_t</span> *Array,<span class="type">uint16_t</span> Length)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;Length;i++)&#123;</span><br><span class="line">sendbyte(Array[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sendstring</span><span class="params">(<span class="type">char</span> *<span class="built_in">string</span>)</span>&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;<span class="built_in">string</span>[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">sendbyte(<span class="built_in">string</span>[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">Pow</span><span class="params">(<span class="type">uint32_t</span> x,<span class="type">uint32_t</span> y)</span>&#123;</span><br><span class="line"><span class="type">uint32_t</span> result=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y--)&#123;</span><br><span class="line">result*=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sendnumber</span><span class="params">(<span class="type">uint32_t</span> number,<span class="type">uint8_t</span> length)</span>&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">sendbyte(number/Pow(<span class="number">10</span>,length-i<span class="number">-1</span>)%<span class="number">10</span>+<span class="number">0x30</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf函数在内部主要是用fputc()进行打印，对fpuc进行重定向就相当于对printf重定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch,FILE *f)</span></span><br><span class="line">&#123;sendbyte(ch);</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LED流水灯的实现"><a href="#LED流水灯的实现" class="headerlink" title="LED流水灯的实现"></a>LED流水灯的实现</h3><ul><li>对GPIO口进行初始化</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ledInit</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO;</span><br><span class="line">GPIO.GPIO_Mode=<span class="number">0x10</span>;</span><br><span class="line">GPIO.GPIO_Pin=GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 |GPIO_Pin_5 ;</span><br><span class="line">GPIO.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>流水灯函数实现</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">led_flash</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> t)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(t)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:GPIO_SetBits(GPIOA,GPIO_Pin_1);Delay_ms(i);GPIO_ResetBits(GPIOA,GPIO_Pin_1);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:GPIO_SetBits(GPIOA,GPIO_Pin_2);Delay_ms(i);GPIO_ResetBits(GPIOA,GPIO_Pin_2);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:GPIO_SetBits(GPIOA,GPIO_Pin_3);Delay_ms(i);GPIO_ResetBits(GPIOA,GPIO_Pin_3);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:GPIO_SetBits(GPIOA,GPIO_Pin_4);Delay_ms(i);GPIO_ResetBits(GPIOA,GPIO_Pin_4);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:GPIO_SetBits(GPIOA,GPIO_Pin_5);Delay_ms(i);GPIO_ResetBits(GPIOA,GPIO_Pin_5);<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按键设置</li></ul><p>这里我采用外部中断的方式（在主循环一直扫描GPIO口，会导致cpu性能浪费甚至有可能会导致按键失灵</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Exit_init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_11;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource11);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line11;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_Init_Structure;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannel=EXTI15_10_IRQn;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelCmd=ENABLE;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelPreemptionPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init_Structure.NVIC_IRQChannelSubPriority=<span class="number">0</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">speedup_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_15;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource15);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line15;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">speeddown_Init</span><span class="params">()</span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIOb1;</span><br><span class="line">GPIOb1.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">GPIOb1.GPIO_Pin=GPIO_Pin_12;</span><br><span class="line">GPIOb1.GPIO_Speed=GPIO_Speed_50MHz;   </span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIOb1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource12);</span><br><span class="line">EXTI_InitTypeDef EXTI_Init_Structure;</span><br><span class="line">EXTI_Init_Structure.EXTI_Line=EXTI_Line12;</span><br><span class="line">EXTI_Init_Structure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_Init_Structure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_Init_Structure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line">EXTI_Init(&amp;EXTI_Init_Structure);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>主函数实现</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">ledInit();</span><br><span class="line">Exit_init();</span><br><span class="line">speedup_Init();</span><br><span class="line">speeddown_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x);</span><br><span class="line">led_flash(speed,t);</span><br><span class="line">t=(t+<span class="number">1</span>)%<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)</span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI15_10_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line11)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_11)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line">x=(x+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line11);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line15)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_15)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span>(speed&gt;<span class="number">100</span>)</span><br><span class="line">speed-=<span class="number">100</span>;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line15);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line12)==SET)&#123;</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12)==<span class="number">0</span>);</span><br><span class="line">Easy_Delay_ms(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span> (speed&lt;<span class="number">1000</span>)</span><br><span class="line">speed+=<span class="number">100</span>;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line12);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 电设作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性代数后三章总结</title>
      <link href="/2022/12/26/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%90%8E%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/26/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%90%8E%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线性代数前三章总结</title>
      <link href="/2022/11/05/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%89%8D%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2022/11/05/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%89%8D%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="行列式的性质（以三阶为例）"><a href="#行列式的性质（以三阶为例）" class="headerlink" title="行列式的性质（以三阶为例）"></a>行列式的性质（以三阶为例）</h2><ul><li>行列式和它的转置行列式相等</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=\begin{vmatrix}{a_{11}}&{a_{21}}&{a_{31}}\\{a_{12}}&{a_{22}}&{a_{32}}\\{a_{13}}&{a_{23}}&{a_{33}}\end{vmatrix}</script><ul><li>对换行列式的两行（列），行列式变号</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=-\begin{vmatrix}{a_{21}}&{a_{22}}&{a_{23}}\\{a_{11}}&{a_{12}}&{a_{13}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}</script><ul><li>如果行列式有两行（列）完全相同，则此行列式等于零</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{11}}&{a_{12}}&{a_{13}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=0</script><ul><li>行列式的莫一行(列)的所有元素都乘同一个数$k$,等于用数$k$乘此行列式</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{ka_{21}}&{ka_{22}}&{ka_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=k\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}</script><ul><li>行列式如果有两行（列）元素对应成比例，则此行列式等于零</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{ka_{11}}&{ka_{12}}&{ka_{13}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=0</script><ul><li>分行相加性：若行列式的莫一行（列）的元素都是两数之和，原行列式等于两个新行列式之和</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}+{a_{21}'}&{a_{22}}+{a_{22}'}&{a_{23}}+{a_{23}'}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}+\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}'}&{a_{22}'}&{a_{23}'}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}</script><ul><li>把行列式的莫一行（列）的各元素成同一数任何加到另一行（列）对应的元素上去，行列式不变</li></ul><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\   {a_{21}}&{a_{22}}&{a_{23}}\\   {a_{31}}&{a_{32}}&{a_{33}}   \end{vmatrix}=\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\   {a_{21}}+k{a_{11}}&{a_{22}}+k{a_{12}}&{a_{23}}+k{a_{13}}\\   {a_{31}}&{a_{32}}&{a_{33}}   \end{vmatrix}</script><ul><li><script type="math/tex; mode=display">余子式：把(i,j)元{a_{ij}}在的第i行第j列划去后，留下来的{n-1}阶行列式叫做{(i,j)}原{a_{ij}}\\的余子式，记作{M\_{ij}}</script></li></ul><ul><li><script type="math/tex; mode=display">代数余子式：{A_{ij}=(-1)^{i+j}M_{ij}}</script></li></ul><ul><li><script type="math/tex; mode=display">一个n阶行列式,如果其中第i行所有元素除(i,j)元a_{ij}外都为零，那么这行行列式等于a_{ij}\\与它的代数余子式的乘积</script></li></ul><script type="math/tex; mode=display">  \begin{vmatrix}{a_{11}}&0&0\\  {a_{21}}&{a_{22}}&{a_{23}}\\  {a_{31}}&{a_{32}}&{a_{33}}  \end{vmatrix}=a_{11}A_{11}</script><ul><li><p>行列式等于它的任一行（列）的各元素与其对应的代数余子式乘积之和</p><script type="math/tex; mode=display">\begin{vmatrix}{a_{11}}&{a_{12}}&{a_{13}}\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}=a_{11}A_{11}+a_{12}A_{12}+a_{13}A_{13}</script></li><li><p>范德蒙德行列式</p><script type="math/tex; mode=display">\begin{vmatrix}1&1&\cdots&1\\x_1&x_2&\cdots&x_n\\x^2_1&x^2_2&\cdots&x^2_n\\\vdots&\vdots&&\vdots\\x^{n-1}_1&x^{n-1}_2&\cdots&x^{n-1}_n\\\end{vmatrix}=\prod_{n\ge i>j\ge 1}(x_i-x_j)</script><script type="math/tex; mode=display">首先从第n行开始每行减去上一行的x_1倍，\\然后D_n=a_{11}A_{11}对于M_{11}每一列可以提取公因式\\然后再减去上一行的x_2倍...依次下去最后得到</script></li></ul><script type="math/tex; mode=display">  \prod_{n\ge i>j\ge 1}(x_i-x_j)</script><ul><li>行列式莫一行（列）的元素和另一行（列）的对应元素的代数余子式乘积为零</li></ul><script type="math/tex; mode=display">a_{i1}A_{j1}+a_{i2}A_{j2}+\cdots+a_{in}A_{jn}=0,i\ne j</script><ul><li><p>分块</p><script type="math/tex; mode=display">\begin{vmatrix} a_{11}&\cdots&a_{1k}\\\vdots& &\vdots& &0& \\a_{k1}&\cdots&a_{kk}\\c_{11}&\cdots&c_{1k}&b_{11}&\cdots&b_{1n}\\\vdots& &\vdots&\vdots& &\vdots\\c_{n1}&\cdots&c_{nk}&b_{n1}&\cdots&b_{nn}\\\end{vmatrix}</script><p>这种情况下$D=A_kB_n$</p></li></ul><h2 id="第一章经典例题"><a href="#第一章经典例题" class="headerlink" title="第一章经典例题"></a>第一章经典例题</h2><ul><li>计算行列式<script type="math/tex; mode=display">\begin{vmatrix} & & &\lambda_1\\ & &\lambda_2& \\  &\cdots\\  \lambda_n\\\end{vmatrix}</script></li></ul><p>将最后一行换到第一行，换到第二行一直换，一共交换$\cfrac {n(n-1)}2$</p><script type="math/tex; mode=display">D=(-1)^\frac {n(n-1)}2\lambda_1\lambda_2\cdots\lambda_n</script><ul><li><p>计算</p><script type="math/tex; mode=display">D=\begin{vmatrix} 3& 1& 1&1\\ 1& 3&1&1 \\  1&1&3&1\\ 1&1&1&3\\\end{vmatrix}</script><h3 id="将四行加在一起然后再进行计算"><a href="#将四行加在一起然后再进行计算" class="headerlink" title="将四行加在一起然后再进行计算"></a>将四行加在一起然后再进行计算</h3><script type="math/tex; mode=display">\begin{vmatrix} 3& 1& 1&1\\ 1& 3&1&1 \\  1&1&3&1\\ 1&1&1&3\\\end{vmatrix}=6\begin{vmatrix} 1& 1& 1&1\\ 1& 3&1&1 \\  1&1&3&1\\ 1&1&1&3\\\end{vmatrix}</script></li><li><script type="math/tex; mode=display">典例求A_{11}+A_{12}+A_{13}和M_{11}+M_{12}+M_{13}</script></li></ul><script type="math/tex; mode=display">A_{11}+A_{12}+A_{13}=\begin{vmatrix}1&1&1\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}</script><script type="math/tex; mode=display">M_{11}+M_{12}+M_{13}=\begin{vmatrix}1&-1&1\\{a_{21}}&{a_{22}}&{a_{23}}\\{a_{31}}&{a_{32}}&{a_{33}}\end{vmatrix}</script><hr><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="矩阵定义"><a href="#矩阵定义" class="headerlink" title="矩阵定义"></a>矩阵定义</h2><ul><li><script type="math/tex; mode=display">n元非齐次线性方程组Ax=B\\n元齐次线性方程组Ax=O</script></li><li><p>矩阵A矩阵B对应位置上的的元素相同，即A=B</p></li><li><script type="math/tex; mode=display">增广矩阵:(A,B)=\begin{pmatrix}{a_{11}}&{a_{12}}&\cdots&{a_{1n}}&{b_{1}}\\{a_{21}}&{a_{22}}&\cdots&{a_{2n}}&{b_{2}}\\\vdots&\vdots& &\vdots&\vdots\\{a_{m1}}&{a_{m2}}&\cdots&{a_{mn}}&b_{m}\\\end{pmatrix}</script></li><li><p>对角阵：</p><script type="math/tex; mode=display">\Lambda=diag(\lambda_1,,\lambda_2,\cdots,\lambda_n)\\\Lambda=\begin{pmatrix}\lambda_1&0&\cdots&0\\0&\lambda_2&\cdots&0\\\vdots&\vdots& &\vdots\\0&0&\cdots&\lambda_n\\\end{pmatrix}</script></li><li><p>单位阵：</p><script type="math/tex; mode=display">E=\begin{pmatrix}1&0&\cdots&0\\0&1&\cdots&0\\\vdots&\vdots& &\vdots\\0&0&\cdots&1\\\end{pmatrix}</script></li></ul><h2 id="矩阵的运算"><a href="#矩阵的运算" class="headerlink" title="矩阵的运算"></a>矩阵的运算</h2><h3 id="矩阵的加减法"><a href="#矩阵的加减法" class="headerlink" title="矩阵的加减法"></a>矩阵的加减法</h3><p>对应位置上的元素相加(减)（两的矩阵行列相同）</p><p>运算规律：</p><p>A+B=B+A</p><p>(A+B)+C=A+(B+C)</p><h3 id="数与矩阵相乘"><a href="#数与矩阵相乘" class="headerlink" title="数与矩阵相乘"></a>数与矩阵相乘</h3><p>每个元素都乘$\lambda$</p><p>运算规则：</p><script type="math/tex; mode=display">(\lambda\mu)A=\lambda(\mu)A\\(\lambda+\mu)A=\lambda A+\mu A\\\lambda(A+B)=\lambda A+\mu A\\</script><h3 id="矩阵和矩阵相乘"><a href="#矩阵和矩阵相乘" class="headerlink" title="矩阵和矩阵相乘"></a>矩阵和矩阵相乘</h3><script type="math/tex; mode=display">设A是一个m*s矩阵，B是一个s*n矩阵，矩阵·A和矩阵B的乘积是一个m*n的矩阵C</script><ul><li><p>矩阵乘法不满足交换律（除非AB=BA,A与B才是可以交换的）</p></li><li><script type="math/tex; mode=display">矩阵A\ne O，矩阵B\ne O，矩阵AB=O，不能得出A=O或B=O的结论\\若AB=AC，不能说明B=C，必须要有A可逆的条件。</script><p>计算规律：</p><script type="math/tex; mode=display">(AB)C=A(BC)\\\lambda(AB)=A(\lambda B)\\A(B+C)=AB+AC\\</script><p>数量阵：</p><script type="math/tex; mode=display">\begin{pmatrix}\lambda&0&\cdots&0\\0&\lambda&\cdots&0\\\vdots&\vdots& &\vdots\\0&0&\cdots&\lambda\\\end{pmatrix}</script></li><li><p>矩阵的幂：</p><script type="math/tex; mode=display">A^1=A,A^2=A^1A^1</script></li></ul><script type="math/tex; mode=display">(AB)^k=ABAB\cdots \\只有当AB可交换时才有(AB)^k=A^kB^k\\例如(A+B)^2=A^2+2AB+B^2,(A+B)(A-B)=A^2-B^2都需要A和B可交换时才成立</script><ul><li><p>矩阵的转置</p><p>行列转换</p><p>运算规律：</p><script type="math/tex; mode=display">(A^T)^T=A\\(A+B)^T=A^T+B^T\\(\lambda A)^T=\lambda A^T\\(AB)^T=B^TA^T</script></li><li><p>如果满足$A^T=A$,那么A称为对称矩阵，简称对称阵。</p></li><li><p>反对称矩阵：</p><script type="math/tex; mode=display">A^T=-A\\如果A是反对称矩阵那么A^k,当k等于偶数的时候是对称阵，当k等于奇数的时候是反对称阵</script></li></ul><h3 id="方阵的行列式"><a href="#方阵的行列式" class="headerlink" title="方阵的行列式"></a>方阵的行列式</h3><ul><li><p>运算规律：</p><script type="math/tex; mode=display">{\begin{vmatrix}A\end{vmatrix}=\begin{vmatrix}A^T\end{vmatrix} }\\{\begin{vmatrix}\lambda A\end{vmatrix}=\lambda^n\begin{vmatrix}A\end{vmatrix}}\\\begin{vmatrix}AB\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}B\end{vmatrix}</script></li><li><p>伴随阵：</p><script type="math/tex; mode=display">行列式\begin{vmatrix}A\end{vmatrix}的各个元素的代数余子式构成的矩阵，称为对称阵\\A^*=\begin{pmatrix}{A_{11}}&{A_{21}}&\cdots&{A_{n1}}\\{A_{12}}&{A_{22}}&\cdots&{A_{n2}}\\\vdots&\vdots& &\vdots\\{A_{1n}}&{A_{2n}}&\cdots&{A_{nn}}\end{pmatrix}\\伴随阵一定要记得行上面的代数余子式写在列上面</script></li></ul><script type="math/tex; mode=display">AA^*=A^*A=\begin{vmatrix}A\end{vmatrix}E</script><ul><li><p>逆矩阵：</p><script type="math/tex; mode=display">对于n阶方阵A，如果有一个n阶方阵使得AB=E那么矩阵A是可逆的，\\矩阵B称为A的逆矩阵\\如果矩阵A是可逆的，那么A的逆矩阵是惟一的\\若矩阵A可逆，则\begin{vmatrix}A\end{vmatrix}\ne 0\\如果矩阵A\ne 0,则矩阵A可逆，且\\A^{-1}=\frac{1}{\begin{vmatrix}A\end{vmatrix}}A^*</script><p>当${\begin{vmatrix}A \end{vmatrix}}=0$,A称为奇异矩阵，否则称为非奇异矩阵，可逆矩阵就是非奇异矩阵</p><p>运算规律：</p><script type="math/tex; mode=display">若A可逆，则A^{-1}亦可逆，且(A^{-1})^{-1}=A\\若A可逆，数\lambda\ne 0,则(\lambda A)^{-1}=\frac1\lambda A^{-1}</script></li><li><script type="math/tex; mode=display">\phi(A)=a_0E+a_1A+\cdots+a_mA^m\\被称为矩阵A的多项式</script></li></ul><h3 id="克拉默法则"><a href="#克拉默法则" class="headerlink" title="克拉默法则"></a>克拉默法则</h3><p>如果线性方程的系数矩阵A的行列式不等于0</p><p>那么方程组有惟一解</p><script type="math/tex; mode=display">\left \{\begin{array}{c}a_{11}x_1+a_{12}x_2+\cdots+a_{1n}x_n=b_1\\a_{21}x_1+a_{22}x_2+\cdots+a_{2n}x_n=b_2\\\cdots\cdots\\a_{n1}x_1+a_{n2}x_2+\cdots+a_{nn}x_n=b_n\\\end{array}\right .\\x_n=\frac{\begin{vmatrix}A_n\end{vmatrix}}{\begin{vmatrix}A\end{vmatrix}}\\A_j就是第j列的元素用方程组右端的常数项代替后得到的n阶矩阵</script><h3 id="矩阵分块化"><a href="#矩阵分块化" class="headerlink" title="矩阵分块化"></a>矩阵分块化</h3><p>将矩阵进行分块。</p><p>分块对角矩阵：</p><script type="math/tex; mode=display">A=\begin{pmatrix}A_1&0&\cdots&0\\0&A_2&\cdots&0\\\vdots&\vdots& &\vdots\\0&0&\cdots&A_n\\\end{pmatrix}\\{\begin{vmatrix}A\end{vmatrix}}={\begin{vmatrix}A_1\end{vmatrix}}{\begin{vmatrix}A_2\end{vmatrix}}\cdots{\begin{vmatrix}A_n\end{vmatrix}}</script><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="矩阵的初等变换"><a href="#矩阵的初等变换" class="headerlink" title="矩阵的初等变换"></a>矩阵的初等变换</h2><ul><li><p>初等行变换：</p></li><li><script type="math/tex; mode=display">1，对换两行\\2，以数k\ne 0乘莫一行中所有的元\\3，把某一行所有元的k倍加到另一行对于的元上去\\</script></li><li><p>矩阵等价关系具有如下性质：</p><script type="math/tex; mode=display">1，反身性      A\sim A\\2,对称性  若A\sim B则B\sim A\\3,传递性   若A\sim B,B\sim C则A\sim C</script></li><li><p>行阶梯形矩阵：</p><p>非零矩阵满足非零行在零行的上面，非零行的首位非零元所在列在上一行的首位非零元所在列的右边</p></li><li><p>行最简形矩阵：是行阶梯，并且首位非零元为1，首位非零元所在列的其他元均为0</p></li><li><script type="math/tex; mode=display">设A与B为m*n矩阵，那么\\(行变换)A\sim B的充分必要条件是存在m阶可逆矩阵P，使PA=B\\(列变换)A\sim B的充分必要条件使存在m阶可逆矩阵Q，使得AQ=B\\A\sim B的充分必要条件使存在m阶可逆矩阵P及n阶可逆矩阵Q，使得PAQ=B</script></li></ul><ul><li><p>三种初等阵分别对单位阵使用三种初等变换</p></li><li><p>设A是一个m*n矩阵，对A施行一次初等行变换，相当于在A左边乘相应的m阶初等矩阵；对A施行一次初等列变换，相当于在的右边乘相应的n阶初等矩阵</p></li><li><script type="math/tex; mode=display">方阵A可逆的充分必要条件使存在有限个初等矩阵P_1,P_2\cdots,P_l\\使得A=P_1P_2\cdotsP_l</script></li></ul><ul><li><script type="math/tex; mode=display">方阵A可逆的充分必要条件使A\sim E</script></li></ul><ul><li><p>用法：利用初等行变换把(A,E)转化成(F,P)，如果F=E说明，说明矩阵A可逆，AP=E</p><h3 id="矩阵的秩"><a href="#矩阵的秩" class="headerlink" title="矩阵的秩"></a>矩阵的秩</h3></li></ul><ul><li><script type="math/tex; mode=display">在m*n矩阵A中，任取k行与k列，位于交叉处的k^2个元素，\\不改变它们在A中所处的位置次序而得的k阶行列式称为矩阵A的k阶\\A非零子式的最高阶数就是矩阵的秩，零矩阵的秩为零</script></li></ul><ul><li>秩和行阶梯的行数相同</li><li><p>可逆矩阵的秩等于矩阵阶数，不可逆矩阵小于矩阵阶数。</p></li><li><p>基本性质：</p><script type="math/tex; mode=display">1，0\le R(A)\le min(m,n)\\2，R(A^T)=R(A)\\3,A经过一系列初等变化秩不变。\\4,max(R(A),R(B))\le R(A,B)\le R(A)+R(B)\\5,当b为非零列向量时，有R(A)\le R(A,b)\le R(A)+R(B)\\R(A+B)\le R(A)+R(B)</script></li><li><p>常用性质：</p><script type="math/tex; mode=display">7,R(AB)\le min(R(A),R(B))\\8,A_{m*n}B_{n*l}=O，则R(A)+R(B)\le n</script><h3 id="线性方程组的解"><a href="#线性方程组的解" class="headerlink" title="线性方程组的解"></a>线性方程组的解</h3></li><li><script type="math/tex; mode=display">非齐次线性方程组Ax=b\\1,无解的充分必要条件是R(A)<R(A,b)\\2，有唯一解的充分必要条件是R(A)=R(A,b)=n\\3,有无限多解的充分必要条件是R(A)=R(A,b)<n\\</script></li></ul><ul><li><script type="math/tex; mode=display">1,n元齐次线性方程组Ax=0有非零解的充分必要条件是R(A)<0\\2,线性方程组有解的情况是R(A)=R(A,b)\\3,矩阵方程AX=B有解的充分必要条件是R(A)=R(A,B)</script></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一高等数学概念汇总（一）</title>
      <link href="/2022/11/04/%E5%A4%A7%E4%B8%80%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E6%A6%82%E5%BF%B5%E6%B1%87%E6%80%BB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/11/04/%E5%A4%A7%E4%B8%80%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E6%A6%82%E5%BF%B5%E6%B1%87%E6%80%BB%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="大一高等数学概念汇总（一）"><a href="#大一高等数学概念汇总（一）" class="headerlink" title="大一高等数学概念汇总（一）"></a>大一高等数学概念汇总（一）</h1><h2 id="函数和映射"><a href="#函数和映射" class="headerlink" title="函数和映射"></a>函数和映射</h2><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><ol><li>定义X，Y为两个非空集合，$如果存在一个法则f$，使得对X中的每个元素$x$按法则$f$,在Y中有唯一确定的的元素$y$与之对应，那么称$f$为X到Y的映射。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
